{
	"info": {
		"_postman_id": "b33d5122-10f3-4fe0-a2d8-dc613bf77741",
		"name": "Senior Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Search Omdb",
			"item": [
				{
					"name": "Search OMDB - Ferngully - t&y",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9b9b8cd-d5a7-4c8e-b9c0-a217241fa644",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/search?title=ferngully&year=1992",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"search"
							],
							"query": [
								{
									"key": "title",
									"value": "ferngully"
								},
								{
									"key": "year",
									"value": "1992"
								}
							]
						},
						"description": "search OMDB for item (In this case Ferngully)"
					},
					"response": []
				},
				{
					"name": "Search OMDB - bad year",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9b9b8cd-d5a7-4c8e-b9c0-a217241fa644",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// pm.test(\"response must be valid and have a body\", function () {",
									"//      pm.response.to.be.ok;",
									"//      pm.response.to.be.withBody;",
									"//      pm.response.to.be.json;",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/search?title=ferngully&year=rttr",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"search"
							],
							"query": [
								{
									"key": "title",
									"value": "ferngully"
								},
								{
									"key": "year",
									"value": "rttr"
								}
							]
						},
						"description": "search OMDB for item (In this case Ferngully)"
					},
					"response": []
				},
				{
					"name": "Search OMDB - Ferngully - t",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c040545-1bcf-4aae-8c09-e12bedd6211c",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/search?title=ferngully",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"search"
							],
							"query": [
								{
									"key": "title",
									"value": "ferngully"
								}
							]
						},
						"description": "search OMDB for item (In this case Ferngully)"
					},
					"response": []
				},
				{
					"name": "Search OMDB - Ferngully - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "105d95e6-1573-4d77-ba16-47fbd78ff729",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/search?id=tt0104254",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "tt0104254"
								}
							]
						},
						"description": "search OMDB for item (In this case Ferngully)"
					},
					"response": []
				},
				{
					"name": "Search OMDB - bad id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "105d95e6-1573-4d77-ba16-47fbd78ff729",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// pm.test(\"response must be valid and have a body\", function () {",
									"//      pm.response.to.be.ok;",
									"//      pm.response.to.be.withBody;",
									"//      pm.response.to.be.json;",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/search?id=tt01042re",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "tt01042re"
								}
							]
						},
						"description": "search OMDB for item (In this case Ferngully)"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Browse",
			"item": [
				{
					"name": "Browse - no args",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f39a6a6-ede2-44c5-bac7-4d8ffe3e3eaf",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/browse",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"browse"
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse - weird string search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b6ea4f0-cda6-4d7e-bfc5-6f6615710188",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/browse?title=fern$#guLly",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"browse"
							],
							"query": [
								{
									"key": "title",
									"value": "fern$"
								}
							],
							"hash": "guLly"
						}
					},
					"response": []
				},
				{
					"name": "Browse - year NaN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63fdc569-838a-4e39-bdc7-570ea633367e",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/browse?title=fwet&year=3542ff",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"browse"
							],
							"query": [
								{
									"key": "title",
									"value": "fwet"
								},
								{
									"key": "year",
									"value": "3542ff"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse - valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "176ca8b7-fd9c-4a6a-8a9d-b004330502c3",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/browse?id=tt0076759",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"browse"
							],
							"query": [
								{
									"key": "id",
									"value": "tt0076759"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse - invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa85aa95-dfe1-46e2-963d-5d89e9cf90d0",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/browse?id=tt00767",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"browse"
							],
							"query": [
								{
									"key": "id",
									"value": "tt00767"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Create User - no args",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f39a6a6-ede2-44c5-bac7-4d8ffe3e3eaf",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// pm.test(\"response must be valid and have a body\", function () {",
									"//      pm.response.to.be.ok;",
									"//      pm.response.to.be.withBody;",
									"//      pm.response.to.be.json;",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/user/new",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"user",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "176ca8b7-fd9c-4a6a-8a9d-b004330502c3",
								"exec": [
									"// first run",
									"pm.test(\"New Insert\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.body(\"201: user created\");",
									"});",
									"",
									"// any other run",
									"pm.test(\"Item already inserted\", function () {",
									"    pm.response.to.have.body(\"400: Existing user\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"me\",\n\"password\" : \"ee\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/user/new",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"user",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Test - success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79df96ab-ad7e-4ff6-9daa-00c0f41f5e74",
								"exec": [
									"// first run",
									"pm.test(\"Valid Login\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.body('{\"data\":\"Hello, me!\"}\\n');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": \"Hello, miguel!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/resource-test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"resource-test"
							]
						},
						"description": "Create user needs to run previous to this test"
					},
					"response": []
				},
				{
					"name": "Login Test - bad passwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79df96ab-ad7e-4ff6-9daa-00c0f41f5e74",
								"exec": [
									"// first run",
									"pm.test(\"Valid Login\", function () {",
									"    pm.response.to.have.status(401);",
									"    pm.response.to.have.body('Unauthorized Access');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "e",
									"type": "string"
								},
								{
									"key": "username",
									"value": "me",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": \"Hello, miguel!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/resource-test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"resource-test"
							]
						},
						"description": "Create user needs to run previous to this test"
					},
					"response": []
				},
				{
					"name": "Get Token - success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79df96ab-ad7e-4ff6-9daa-00c0f41f5e74",
								"exec": [
									"pm.test(\"Valid Login\", function () {",
									"    pm.response.to.have.status(200);",
									"    // pm.response.to.have.body('{\"data\":\"Hello, me!\"}\\n');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/get_token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_token"
							]
						},
						"description": "Create user needs to run previous to this test"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add JSON - Ferngully",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da327bb7-6e2e-4734-aefb-b538c45568e8",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// pm.test(\"response must be valid and have a body\", function () {",
							"//      pm.response.to.be.ok;",
							"//      pm.response.to.be.withBody;",
							"//      pm.response.to.be.json;",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Title\": \"FernGully: The Last Rainforest\",\n    \"Year\": \"1992\",\n    \"Rated\": \"G\",\n    \"Released\": \"10 Apr 1992\",\n    \"Runtime\": \"76 min\",\n    \"Genre\": \"Animation, Adventure, Family, Fantasy\",\n    \"Director\": \"Bill Kroyer\",\n    \"Writer\": \"Jim Cox (screenplay), Diana Young (original stories)\",\n    \"Actors\": \"Tim Curry, Samantha Mathis, Christian Slater, Jonathan Ward\",\n    \"Plot\": \"The magical inhabitants of a rainforest fight to save their home, which is threatened by logging and a polluting force of destruction called Hexxus.\",\n    \"Language\": \"English\",\n    \"Country\": \"Australia, USA\",\n    \"Awards\": \"3 wins & 1 nomination.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNzNiNTliMjItMmY0ZS00YTMzLTllYTQtMzE2ZDM1YTgwZjlmL2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyMTEwMTkwOTI@._V1_SX300.jpg\",\n    \"Url\" : \"/Users/brookebullock/Movies/Ferngully.m4v\",\n    \"Ratings\": [\n        {\n            \"Source\": \"Internet Movie Database\",\n            \"Value\": \"6.5/10\"\n        },\n        {\n            \"Source\": \"Rotten Tomatoes\",\n            \"Value\": \"63%\"\n        },\n        {\n            \"Source\": \"Metacritic\",\n            \"Value\": \"67/100\"\n        }\n    ],\n    \"Metascore\": \"67\",\n    \"imdbRating\": \"6.5\",\n    \"imdbVotes\": \"25,314\",\n    \"imdbID\": \"tt0104254\",\n    \"Type\": \"movie\",\n    \"DVD\": \"18 Feb 2002\",\n    \"BoxOffice\": \"N/A\",\n    \"Production\": \"Fox\",\n    \"Website\": \"N/A\",\n    \"Response\": \"True\"\n}"
				},
				"url": {
					"raw": "http://localhost:5000/write_json",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"write_json"
					]
				},
				"description": "writes the object to the database"
			},
			"response": []
		},
		{
			"name": "Get JSON - Ferngully sucess",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2970a5ca-cea4-494d-9af5-2d8eb7587867",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     pm.response.to.be.ok;",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/query_json/tt0104254",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"query_json",
						"tt0104254"
					]
				},
				"description": "This should get the Ferngully JSON object"
			},
			"response": []
		},
		{
			"name": "Get JSON - fails",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a00675ca-37f4-4da7-ba7b-0af546e4e880",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/query_json/tt",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"query_json",
						"tt"
					]
				},
				"description": "This should fail to get any JSON, and fail gracefully."
			},
			"response": []
		},
		{
			"name": "Get Video - Ferngully-defunct",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da11e934-e087-4630-88f2-3ffa96e89c1c",
						"exec": [
							"// pm.test(\"Status test\", function () {",
							"//     pm.response.to.have.status(200);",
							"// });",
							"",
							"// pm.test(\"response must be valid\", function () {",
							"//      pm.response.to.be.ok;",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/video/Ferngully.m4v",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"video",
						"Ferngully.m4v"
					]
				},
				"description": "Will send back too big of a request, don't try to download, will crash Postman"
			},
			"response": []
		},
		{
			"name": "Get Video - Ferngully",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da11e934-e087-4630-88f2-3ffa96e89c1c",
						"exec": [
							"// pm.test(\"Status test\", function () {",
							"//     pm.response.to.have.status(200);",
							"// });",
							"",
							"// pm.test(\"response must be valid\", function () {",
							"//      pm.response.to.be.ok;",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/video/tt0104254",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"video",
						"tt0104254"
					]
				},
				"description": "Will send back too big of a request, don't try to download, will crash Postman"
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "ee",
				"type": "string"
			},
			{
				"key": "username",
				"value": "me",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e837640d-0a14-4f8e-80d3-a596c5ec0fd0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "be17bff5-fbb7-43c5-a81d-5902eec66511",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}